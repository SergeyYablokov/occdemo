cmake_minimum_required(VERSION 3.1)
project(DummyApp)

if(NOT CMAKE_SYSTEM_NAME MATCHES "Android")
    if(WIN32)
        if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
            if(CMAKE_SIZEOF_VOID_P EQUAL 8)
                set(SDL2_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/SDL2/x86_64-w64-mingw32/include)
                set(SDL2_LIBRARIES "${CMAKE_CURRENT_SOURCE_DIR}/SDL2/x86_64-w64-mingw32/lib")
            else(CMAKE_SIZEOF_VOID_P EQUAL 8)
                set(SDL2_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/SDL2/i686-w64-mingw32/include)
                set(SDL2_LIBRARIES "${CMAKE_CURRENT_SOURCE_DIR}/SDL2/i686-w64-mingw32/lib")
            endif()
        elseif ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
            if(CMAKE_SIZEOF_VOID_P EQUAL 8)
                set(SDL2_LIBRARIES "${CMAKE_CURRENT_SOURCE_DIR}/SDL2/lib/x64")
            else(CMAKE_SIZEOF_VOID_P EQUAL 8)
                set(SDL2_LIBRARIES "${CMAKE_CURRENT_SOURCE_DIR}/SDL2/lib/x86")
            endif()
            set(SDL2_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/SDL2/include)
        endif()
    else(WIN32)
        if(APPLE)
            include(FindPkgConfig)
            pkg_search_module (SDL2 REQUIRED sdl2)
            set(SDL2_INCLUDE_DIRS /usr/local/include)
            set(SDL2_LIBRARIES /usr/local/lib)

            include_directories(${SDL2_INCLUDE_DIRS})
            link_directories(${SDL2_LIBRARIES})
        endif(APPLE)
    endif(WIN32)
    
    if(WIN32)
        set(LIBS winmm imm32 version)
    elseif(APPLE)
        set(LIBS )
    else()
        set(LIBS X11 ittnotify)
    endif()
else()
	set(LIBS android log)
endif()

set(SOURCE_FILES    DummyApp.h)

if(WIN32)
    if(${RENDERER} STREQUAL "GL")
        list(APPEND SOURCE_FILES DummyApp_wgl.cpp)
    elseif(${RENDERER} STREQUAL "VK")
        list(APPEND SOURCE_FILES DummyApp_vk_win32.cpp)
    elseif(${RENDERER} STREQUAL "SW")

    endif()
elseif(APPLE)
    list(APPEND SOURCE_FILES DummyApp_vk_osx.cpp)
else()
    if(${RENDERER} STREQUAL "GL")
        list(APPEND SOURCE_FILES DummyApp_glx.cpp)
    elseif(${RENDERER} STREQUAL "VK")
        list(APPEND SOURCE_FILES DummyApp_vk_xlib.cpp)
    elseif(${RENDERER} STREQUAL "SW")

    endif()
endif()

if(NOT CMAKE_SYSTEM_NAME MATCHES "Android")
	list(APPEND SOURCE_FILES main_pc.cpp)
else()
    list(APPEND SOURCE_FILES main_android.cpp)
endif()

list(APPEND ALL_SOURCE_FILES ${SOURCE_FILES})
#set_source_files_properties(${SOURCE_FILES} PROPERTIES HEADER_FILE_ONLY TRUE)
source_group("src" FILES ${SOURCE_FILES})

if(NOT CMAKE_SYSTEM_NAME MATCHES "Android")
	add_executable(DummyApp ${ALL_SOURCE_FILES})
else()
	add_library(DummyApp SHARED ${ALL_SOURCE_FILES})
endif()

target_link_libraries(DummyApp DummyLib ${LIBS})

add_custom_command(TARGET DummyApp
                   POST_BUILD
                   COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:DummyApp> ${WORKING_DIRECTORY})
                   
set_target_properties(DummyApp PROPERTIES OUTPUT_NAME ${BIN_NAME} VS_DEBUGGER_WORKING_DIRECTORY "${WORKING_DIRECTORY}")
